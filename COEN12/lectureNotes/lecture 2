Binary search
    Begin in middle
    eliminate 1/2 of remaining possibilites
    Maximum number of steps required is O(log n) if the original size of the space was n
    Pre-condition:
        has to be sorted

Code:
    bool bsearch(int a[], int n, int x)
    {
        int lo, hi, mid;
        lo = 0;
        hi = n-1;
        while(lo =< hi)
        {
            mid = (lo+hi)/2;
            if(x == a[mid])
                return true
            if(x > a[mid])
                lo = mid + 1;
            else
                hi = mid - 1;
            
        }
        return false
    }

Abstract data type
    Data type whose implementation has been hidden or abstracted in a way
    Encapsulate the data and the operation on the data, and then hide them from the user
    Things to care
        what data
        what operations can be done on this data
    Things not to care 
        how to organize data in memory or disk

Data structure:
    things to care
        how to organize data in memory or disk
    Ex: array; linked list

